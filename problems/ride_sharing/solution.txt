The reference solution is split in two modules. Here's the client-side one.

  module.exports = {
    save: function (key, data, done) {
      if (localStorage) {
        localStorage.setItem(key, JSON.stringify(data));
        done();
      } else {
        done(new Error('localStorage not supported'));
      }
    },
    get: function (key, done) {
      if (localStorage) {
        done(null, JSON.parse(localStorage.getItem(key)));
      } else {
        done(new Error('localStorage not supported'));
      }
    },
    remove: function (key, done) {
      if (localStorage) {
        localStorage.removeItem(key);
      }
      done();
    }
  };

Here's the server-side solution.

  var fs = require('fs');
  var sanitize = require('sanitize-filename');
  module.exports = {
    save: function (key, data, done) {
      fs.writeFile('store-' + sanitize(key), JSON.stringify(data), done);
    },
    get: function (key, done) {
      fs.readFile('store-' + sanitize(key), 'utf8', function (err, data) {
        done(null, data ? JSON.parse(data) : void 0);
      });
    },
    remove: function (key, done) {
      fs.unlink('store-' + sanitize(key), done);
    }
  };

Using the `"browser"` field in your modules is crucial to providing faster
alternatives for the browser, by trimming down things you can live without
on the client-side.
